import logging
from moviepy.video.io.VideoFileClip import VideoFileClip
from telegram import ReplyKeyboardMarkup, Update
from config import TOKEN, MAX_VIDEO_DURATION
from video_processing import process_video_with_faces
import os


import logging
import tempfile
from telegram import ReplyKeyboardMarkup, Update
from config import MAX_VIDEO_DURATION
from video_processing import process_video_with_faces
import os


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
async def start(update: Update, context):
    keyboard = [
        ['üé¨ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –≤–∏–¥–µ–æ', 'üÜò –ü–æ–º–æ—â—å']
    ]
    reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
    welcome_message = (
        "üëã –ü—Ä–∏–≤–µ—Ç! –û—Ç–ø—Ä–∞–≤—å –≤–∏–¥–µ–æ ‚Äî —è –Ω–∞–π–¥—É –Ω–∞ –Ω—ë–º –ª–∏—Ü–∞!\n\n"
        "üí° –ö–æ–º–∞–Ω–¥—ã:\n"
        "üìπ '–û—Ç–ø—Ä–∞–≤–∏—Ç—å –≤–∏–¥–µ–æ' - –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–∏–¥–µ–æ\n"
        "üÜò '–ü–æ–º–æ—â—å' - –ü–æ–º–æ—â—å\n"
    )
    await update.message.reply_text(welcome_message, reply_markup=reply_markup)


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
async def handle_text(update: Update, context):
    text_received = update.message.text
    if text_received == 'üé¨ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –≤–∏–¥–µ–æ':
        await update.message.reply_text("–û—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∏–¥–µ–æ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞.")
    elif text_received == 'üÜò –ü–æ–º–æ—â—å':
        await update.message.reply_text("–Ø –∏—â—É –ª–∏—Ü–∞ –Ω–∞ –≤–∏–¥–µ–æ!")
    else:
        await update.message.reply_text("–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É –∏–∑ –º–µ–Ω—é.")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–∏–¥–µ–æ
async def handle_video(update: Update, context):
    logging.info("–ü–æ–ª—É—á–µ–Ω–æ –≤–∏–¥–µ–æ")
    
    # –ü–æ–ª—É—á–∞–µ–º –æ–±—ä–µ–∫—Ç —Ñ–∞–π–ª–∞ –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è
    video_file = await update.message.video.get_file()

    # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤–∏–¥–µ–æ
    with tempfile.NamedTemporaryFile(delete=False, suffix=".mp4") as temp_video_file:
        temp_video_path = temp_video_file.name
        temp_video_file.write(await video_file.download_as_bytearray())  # –°–∫–∞—á–∏–≤–∞–µ–º –≤–∏–¥–µ–æ –≤ –≤–∏–¥–µ –±–∞–π—Ç–æ–≤ –∏ –∑–∞–ø–∏—Å—ã–≤–∞–µ–º
        
    output_video_path = f"{temp_video_path}_processed.mp4"

    try:
        await update.message.reply_text("–û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é –≤–∏–¥–µ–æ –¥–ª—è –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏—è –ª–∏—Ü...")

        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–∏–¥–µ–æ —Å –æ–±—Ä–µ–∑–∫–æ–π –¥–æ MAX_VIDEO_DURATION –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
        gender_list = process_video_with_faces(temp_video_path, output_video_path)  # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø–æ–ª–æ–≤

        # –û—Ç–ø—Ä–∞–≤–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–≥–æ –≤–∏–¥–µ–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        with open(output_video_path, 'rb') as video:
            await update.message.reply_video(video=video)

    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∏–¥–µ–æ: {e}")
        await update.message.reply_text("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∏–¥–µ–æ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")

    finally:
        # –£–¥–∞–ª–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ –ø–æ—Å–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏
        os.remove(temp_video_path)
        if os.path.exists(output_video_path):
            os.remove(output_video_path)

    logging.info("–í–∏–¥–µ–æ —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ")



